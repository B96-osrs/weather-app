(()=>{"use strict";var n,e,t,r,o={426:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,"* {\n  box-sizing: border-box;\n}\nbody {\n  background-size: cover;\n  background-attachment: fixed;\n  margin: 0;\n}\n.main-container {\n  display: flex;\n  flex-direction: column;\n  gap: 6rem;\n  height: 100vh;\n}\n\n#search-icon {\n  width: 24px;\n  height: 24px;\n}\n#search-input {\n  height: 1.6rem;\n  border-radius: 0.5rem;\n  outline-style: none;\n  border-style: none;\n}\n\nimg {\n  width: 100px;\n  height: 100px;\n  font-size: 1rem;\n}\n\n.header {\n  display: flex;\n  background-color: rgba(0, 0, 0, 0.705);\n  height: 3rem;\n  padding: 24px;\n}\n\n#search {\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n  gap: 12px;\n}\n\n.content {\n  width: minmax(60%, 600px);\n  height: minmax(50%, 360px);\n  display: flex;\n  justify-content: center;\n  align-self: center;\n  gap: 1rem;\n  padding: 2rem;\n  font-size: 20px;\n  color: white;\n  background-color: rgba(0, 0, 0, 0.705);\n  border-radius: 1rem;\n}\n\n.box-1 {\n  margin-right: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n.box-1 div:nth-child(1) {\n  font-size: 2rem;\n}\n.box-2 {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-size: 4rem;\n}\n\n.box-3 {\n  margin-left: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n.footer {\n  background-color: rgba(0, 0, 0, 0.9);\n  padding: 0.7em;\n  display: flex;\n  margin-top: auto;\n  justify-content: center;\n  color: white;\n  font-size: 1em;\n}\na:visited {\n  color: rgb(197, 197, 197);\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,sBAAsB;AACxB;AACA;EACE,sBAAsB;EACtB,4BAA4B;EAC5B,SAAS;AACX;AACA;EACE,aAAa;EACb,sBAAsB;EACtB,SAAS;EACT,aAAa;AACf;;AAEA;EACE,WAAW;EACX,YAAY;AACd;AACA;EACE,cAAc;EACd,qBAAqB;EACrB,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,sCAAsC;EACtC,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,iBAAiB;EACjB,SAAS;AACX;;AAEA;EACE,yBAAyB;EACzB,0BAA0B;EAC1B,aAAa;EACb,uBAAuB;EACvB,kBAAkB;EAClB,SAAS;EACT,aAAa;EACb,eAAe;EACf,YAAY;EACZ,sCAAsC;EACtC,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,sBAAsB;EACtB,WAAW;AACb;AACA;EACE,eAAe;AACjB;AACA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,iBAAiB;EACjB,aAAa;EACb,sBAAsB;EACtB,WAAW;AACb;;AAEA;EACE,oCAAoC;EACpC,cAAc;EACd,aAAa;EACb,gBAAgB;EAChB,uBAAuB;EACvB,YAAY;EACZ,cAAc;AAChB;AACA;EACE,yBAAyB;AAC3B",sourcesContent:["* {\n  box-sizing: border-box;\n}\nbody {\n  background-size: cover;\n  background-attachment: fixed;\n  margin: 0;\n}\n.main-container {\n  display: flex;\n  flex-direction: column;\n  gap: 6rem;\n  height: 100vh;\n}\n\n#search-icon {\n  width: 24px;\n  height: 24px;\n}\n#search-input {\n  height: 1.6rem;\n  border-radius: 0.5rem;\n  outline-style: none;\n  border-style: none;\n}\n\nimg {\n  width: 100px;\n  height: 100px;\n  font-size: 1rem;\n}\n\n.header {\n  display: flex;\n  background-color: rgba(0, 0, 0, 0.705);\n  height: 3rem;\n  padding: 24px;\n}\n\n#search {\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n  gap: 12px;\n}\n\n.content {\n  width: minmax(60%, 600px);\n  height: minmax(50%, 360px);\n  display: flex;\n  justify-content: center;\n  align-self: center;\n  gap: 1rem;\n  padding: 2rem;\n  font-size: 20px;\n  color: white;\n  background-color: rgba(0, 0, 0, 0.705);\n  border-radius: 1rem;\n}\n\n.box-1 {\n  margin-right: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n.box-1 div:nth-child(1) {\n  font-size: 2rem;\n}\n.box-2 {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-size: 4rem;\n}\n\n.box-3 {\n  margin-left: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n.footer {\n  background-color: rgba(0, 0, 0, 0.9);\n  padding: 0.7em;\n  display: flex;\n  margin-top: auto;\n  justify-content: center;\n  color: white;\n  font-size: 1em;\n}\na:visited {\n  color: rgb(197, 197, 197);\n}\n"],sourceRoot:""}]);const A=a},566:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,'.switch-box {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 1.2rem;\n  font-weight: bold;\n}\n.switch {\n  position: relative;\n  display: block;\n  width: 3.7rem;\n  height: 2rem;\n}\n\n/* Hide default HTML checkbox */\n.switch input {\n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n\n/* The slider */\n.slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #a5a8a6;\n  -webkit-transition: 0.4s;\n  transition: 0.4s;\n}\n\n.slider:before {\n  position: absolute;\n  content: "";\n  height: 1.6rem;\n  width: 1.6rem;\n  left: 0.2rem;\n  bottom: 0.2rem;\n  background-color: white;\n  -webkit-transition: 0.4s;\n  transition: 0.4s;\n}\n\ninput:checked + .slider {\n  background-color: #a5a8a6;\n}\n\ninput:focus + .slider {\n  background-color: #a5a8a6;\n}\n\ninput:checked + .slider:before {\n  -webkit-transform: translateX(26px);\n  -ms-transform: translateX(26px);\n  transform: translateX(26px);\n}\n\n/* Rounded sliders */\n.slider.round {\n  border-radius: 2rem;\n}\n\n.slider.round:before {\n  border-radius: 50%;\n}\n',"",{version:3,sources:["webpack://./src/switch.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,mBAAmB;EACnB,WAAW;EACX,iBAAiB;EACjB,iBAAiB;AACnB;AACA;EACE,kBAAkB;EAClB,cAAc;EACd,aAAa;EACb,YAAY;AACd;;AAEA,+BAA+B;AAC/B;EACE,UAAU;EACV,QAAQ;EACR,SAAS;AACX;;AAEA,eAAe;AACf;EACE,kBAAkB;EAClB,eAAe;EACf,MAAM;EACN,OAAO;EACP,QAAQ;EACR,SAAS;EACT,yBAAyB;EACzB,wBAAwB;EACxB,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,cAAc;EACd,aAAa;EACb,YAAY;EACZ,cAAc;EACd,uBAAuB;EACvB,wBAAwB;EACxB,gBAAgB;AAClB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,mCAAmC;EACnC,+BAA+B;EAC/B,2BAA2B;AAC7B;;AAEA,oBAAoB;AACpB;EACE,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;AACpB",sourcesContent:['.switch-box {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 1.2rem;\n  font-weight: bold;\n}\n.switch {\n  position: relative;\n  display: block;\n  width: 3.7rem;\n  height: 2rem;\n}\n\n/* Hide default HTML checkbox */\n.switch input {\n  opacity: 0;\n  width: 0;\n  height: 0;\n}\n\n/* The slider */\n.slider {\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #a5a8a6;\n  -webkit-transition: 0.4s;\n  transition: 0.4s;\n}\n\n.slider:before {\n  position: absolute;\n  content: "";\n  height: 1.6rem;\n  width: 1.6rem;\n  left: 0.2rem;\n  bottom: 0.2rem;\n  background-color: white;\n  -webkit-transition: 0.4s;\n  transition: 0.4s;\n}\n\ninput:checked + .slider {\n  background-color: #a5a8a6;\n}\n\ninput:focus + .slider {\n  background-color: #a5a8a6;\n}\n\ninput:checked + .slider:before {\n  -webkit-transform: translateX(26px);\n  -ms-transform: translateX(26px);\n  transform: translateX(26px);\n}\n\n/* Rounded sliders */\n.slider.round {\n  border-radius: 2rem;\n}\n\n.slider.round:before {\n  border-radius: 50%;\n}\n'],sourceRoot:""}]);const A=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(a[c]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);r&&a[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},654:(n,e,t)=>{var r=t(379),o=t.n(r),i=t(795),a=t.n(i),A=t(569),c=t.n(A),s=t(565),d=t.n(s),l=t(216),u=t.n(l),p=t(589),m=t.n(p),f=t(426),h={};h.styleTagTransform=m(),h.setAttributes=d(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=u(),o()(f.Z,h),f.Z&&f.Z.locals&&f.Z.locals},473:(n,e,t)=>{var r=t(379),o=t.n(r),i=t(795),a=t.n(i),A=t(569),c=t.n(A),s=t(565),d=t.n(s),l=t(216),u=t.n(l),p=t(589),m=t.n(p),f=t(566),h={};h.styleTagTransform=m(),h.setAttributes=d(),h.insert=c().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=u(),o()(f.Z,h),f.Z&&f.Z.locals&&f.Z.locals},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],A=0;A<n.length;A++){var c=n[A],s=r.base?c[0]+r.base:c[0],d=i[s]||0,l="".concat(s," ").concat(d);i[s]=d+1;var u=t(l),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var m=o(p,r);r.byIndex=A,e.splice(A,0,{identifier:l,updater:m,references:1})}a.push(l)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var A=t(i[a]);e[A].references--}for(var c=r(n,o),s=0;s<i.length;s++){var d=t(i[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}i=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},220:(n,e,t)=>{t.d(e,{o:()=>A});const r=t.p+"29fd4f5ca90d7a18b0d3.jpg",o=t.p+"a08e64ef5adb6a6c707d.jpg",i=t.p+"84149d38ac086da91ba4.jpg",a=t.p+"292cd182d572d8cc967d.jpg",A={displayWeather:function(n,e){let t=document.getElementById("location"),r=document.getElementById("date"),o=document.getElementById("time"),i=document.getElementById("temperature"),a=document.getElementById("humidity"),A=document.getElementById("wind"),c=document.getElementById("cloud"),s=document.getElementById("weather-icon");t.textContent=n.location;let d=n.time.split(" ");r.textContent=d[0],o.textContent=d[1],a.textContent="Humidity: "+n.humidity+" %",c.textContent="Cloud Cover: "+n.cloud,s.src=n.iconSource,"F"===e?(i.textContent=n.tempF+"° F",A.textContent="Wind: "+n.windMph+" mph"):(i.textContent=n.tempC+"° C",A.textContent="Wind: "+n.windKph+" kph")},highlightUnit:function(n){let e=document.querySelector(".celsius"),t=document.querySelector(".fahrenheit");"F"===n?(e.style.color="grey",t.style.color="orange"):(t.style.color="grey",e.style.color="orange")},displayBackground:function(n){n.condition.includes("rain")?document.body.style.backgroundImage=`url(${r}`:n.condition.includes("snow")?(document.body.style.backgroundImage=`url(${i}`,console.log(o)):n.condition.includes("cloud")?(document.body.style.backgroundImage=`url(${a}`,console.log(o)):(document.body.style.backgroundImage=`url(${o}`,console.log(o))}}},138:(n,e,t)=>{t.a(n,(async(n,e)=>{try{var r=t(891),o=t(220),i=(t(654),t(473),t(485));let a="C";const A=document.getElementById("search-icon"),c=document.querySelector(".switch-checkbox"),s=document.getElementById("search-input");async function d(){let n=document.getElementById("search-input");l=await r.y.getWeather(n.value);try{o.o.displayWeather(l,a),o.o.displayBackground(l)}catch{console.log("error")}}A.src=i;let l=await r.y.getWeather("Linz");o.o.displayWeather(l,a),o.o.highlightUnit(a),o.o.displayBackground(l),s.addEventListener("keypress",(function(n){"Enter"===n.key&&A.click()})),A.addEventListener("click",(function(){d()})),c.addEventListener("change",(function(n){c.checkboxValue=n.target.checked?"on":"off",a="on"===c.checkboxValue?"F":"C",o.o.highlightUnit(a),o.o.displayWeather(l,a)})),e()}catch(u){e(u)}}),1)},891:(n,e,t)=>{t.d(e,{y:()=>r});const r={getWeather:async function(n){const e=await async function(n){const e=await fetch(`https://api.weatherapi.com/v1/current.json?key=27136f6df35e4ca398405149231208&q=${n}&aqi=yes\n      `),t=await e.json();return console.log(t),t}(n);return{location:e.location.name,time:e.current.last_updated,tempC:e.current.temp_c,tempF:e.current.temp_f,windMph:e.current.wind_mph,windKph:e.current.wind_kph,humidity:e.current.humidity,cloud:e.current.cloud,condition:e.current.condition.text,iconSource:`https://${e.current.condition.icon}`}}}},485:(n,e,t)=>{n.exports=t.p+"9d944b720b2341b1ad38.svg"}},i={};function a(n){var e=i[n];if(void 0!==e)return e.exports;var t=i[n]={id:n,exports:{}};return o[n](t,t.exports,a),t.exports}n="function"==typeof Symbol?Symbol("webpack queues"):"__webpack_queues__",e="function"==typeof Symbol?Symbol("webpack exports"):"__webpack_exports__",t="function"==typeof Symbol?Symbol("webpack error"):"__webpack_error__",r=n=>{n&&n.d<1&&(n.d=1,n.forEach((n=>n.r--)),n.forEach((n=>n.r--?n.r++:n())))},a.a=(o,i,a)=>{var A;a&&((A=[]).d=-1);var c,s,d,l=new Set,u=o.exports,p=new Promise(((n,e)=>{d=e,s=n}));p[e]=u,p[n]=n=>(A&&n(A),l.forEach(n),p.catch((n=>{}))),o.exports=p,i((o=>{var i;c=(o=>o.map((o=>{if(null!==o&&"object"==typeof o){if(o[n])return o;if(o.then){var i=[];i.d=0,o.then((n=>{a[e]=n,r(i)}),(n=>{a[t]=n,r(i)}));var a={};return a[n]=n=>n(i),a}}var A={};return A[n]=n=>{},A[e]=o,A})))(o);var a=()=>c.map((n=>{if(n[t])throw n[t];return n[e]})),s=new Promise((e=>{(i=()=>e(a)).r=0;var t=n=>n!==A&&!l.has(n)&&(l.add(n),n&&!n.d&&(i.r++,n.push(i)));c.map((e=>e[n](t)))}));return i.r?s:a()}),(n=>(n?d(p[t]=n):s(u),r(A)))),A&&A.d<0&&(A.d=0)},a.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return a.d(e,{a:e}),e},a.d=(n,e)=>{for(var t in e)a.o(e,t)&&!a.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},a.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),a.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;a.g.importScripts&&(n=a.g.location+"");var e=a.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var t=e.getElementsByTagName("script");if(t.length)for(var r=t.length-1;r>-1&&!n;)n=t[r--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),a.p=n})(),a.nc=void 0,a(138)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,